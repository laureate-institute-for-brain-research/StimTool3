ggplot(merged_data, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(merged_data, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(merged_data, aes(x = arousal, fill = group)) + geom_density(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(merged_data, aes(x = valence, fill = group)) + geom_density(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(merged_data, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(merged_data, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(merged_data, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
names(merged_data)
ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
d <- merged_data
ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
title
library(gridExtra)
make_plotset <- function(data_to_plot, main_title, filename){
p1 <- ggplot(d, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png('test.txt', width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7)
dev.off()
}
make_plotset(merged_data)
make_plotset <- function(data_to_plot, main_title, filename){
p1 <- ggplot(d, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png('test.png', width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7)
dev.off()
}
make_plotset(merged_data)
?grid.arrange
make_plotset <- function(data_to_plot, main_title, filename){
p1 <- ggplot(d, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = main_title)
dev.off()
}
make_plotset(merged_data, 'All Data', 'test.png')
make_plotset <- function(data_to_plot, main_title, filename){
p1 <- ggplot(d, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = main_title, gp=gpar(fontsize = 20, font = 3))
dev.off()
}
make_plotset(merged_data, 'All Data', 'test.png')
make_plotset <- function(data_to_plot, main_title, filename){
p1 <- ggplot(d, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = textGrob(main_title, gp=gpar(fontsize = 20, font = 3)))
dev.off()
}
make_plotset(merged_data, 'All Data', 'test.png')
?textgrob
?textGrob
library(grid)
make_plotset <- function(data_to_plot, main_title, filename){
p1 <- ggplot(d, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = textGrob(main_title, gp=gpar(fontsize = 20, font = 3)))
dev.off()
}
make_plotset(merged_data, 'All Data', 'test.png')
make_plotset <- function(data_to_plot, main_title, filename){
p1 <- ggplot(d, aes(x = valence, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes(x = arousal, fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes(x = craving, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes(x = typicality, fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes(x = hue, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes(x = saturation, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes(x = value, fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = textGrob(main_title, gp=gpar(fontsize = 50)))
dev.off()
}
make_plotset(merged_data, 'All Data', 'test.png')
merged_data
sorted_data <- merged_data[order(merged_data$craving),]
sorted_data$craving
names(sorted_data)
sorted_data$group
sorted_data$category
sorted_data$category
sorted_data$group
a <- c(1,2,3,4)
a
a[1]
a[2]
a[2] <- a[2] + 1
a
#number in each group that have been selected
number_selected <- c(0, 0, 0, 0, 0, 0)
for (i in 1:nrow(sorted_data)){
#x for injection instruments, category not used
if (sorted_data[i, 'category'] == 'x' | sorted_data[i, 'group'] == 'drug'){
next
}
this_category <- as.numeric(as.character(sorted_data[i, 'category']))
if (number_selected[this_category] > 5){
next
}
number_selected[this_category] <- number_selected[this_category] + 1
sorted_data[i, 'selected'] <- TRUE
}
number_selected
number_selected[this_category]
this_category
number_selected[0]
#this will be the 8 highest craving drug and lowest craving neutral images in each category
sorted_data$selected <- FALSE
#go forward, marking the first 8 in each category of control images for selection
names(sorted_data)
#number in each group that have been selected
number_selected <- c(0, 0, 0, 0, 0, 0)
for (i in 1:nrow(sorted_data)){
#x for injection instruments, category not used
if (sorted_data[i, 'category'] == 'x' | sorted_data[i, 'group'] == 'drug'){
next
}
this_category <- as.numeric(as.character(sorted_data[i, 'category'])) + 1
if (number_selected[this_category] > 5){
next
}
number_selected[this_category] <- number_selected[this_category] + 1
sorted_data[i, 'selected'] <- TRUE
}
number_selected
sorted_data$selected
#number in each group that have been selected
number_selected <- c(0, 0, 0, 0, 0, 0)
for (i in nrow(sorted_data):1){
#x for injection instruments, category not used
if (sorted_data[i, 'category'] == 'x' | sorted_data[i, 'group'] == 'control'){
next
}
this_category <- as.numeric(as.character(sorted_data[i, 'category'])) + 1
if (number_selected[this_category] > 5){
next
}
number_selected[this_category] <- number_selected[this_category] + 1
sorted_data[i, 'selected'] <- TRUE
}
number_selected
sorted_data$selected
selected_data <- sorted_data[sorted_data$selected,]
selected_data
dim(selected_data)
8*6*2
sorted_data$selected <- FALSE
names(sorted_data)
#number in each group that have been selected
number_selected <- c(0, 0, 0, 0, 0, 0)
for (i in 1:nrow(sorted_data)){
#x for injection instruments, category not used
if (sorted_data[i, 'category'] == 'x' | sorted_data[i, 'group'] == 'drug'){
next
}
this_category <- as.numeric(as.character(sorted_data[i, 'category'])) + 1
if (number_selected[this_category] > 7){
next
}
number_selected[this_category] <- number_selected[this_category] + 1
sorted_data[i, 'selected'] <- TRUE
}
#number in each group that have been selected
number_selected <- c(0, 0, 0, 0, 0, 0)
for (i in nrow(sorted_data):1){
#x for injection instruments, category not used
if (sorted_data[i, 'category'] == 'x' | sorted_data[i, 'group'] == 'control'){
next
}
this_category <- as.numeric(as.character(sorted_data[i, 'category'])) + 1
if (number_selected[this_category] > 7){
next
}
number_selected[this_category] <- number_selected[this_category] + 1
sorted_data[i, 'selected'] <- TRUE
}
selected_data <- sorted_data[sorted_data$selected,]
dim(selected_data)_
dim(selected_data)
8*6*2
table(selected_data$category)
table(selected_data$group)
table(selected_data[, c('group', 'category')])
make_plotset(selected_data, 'Selected Images', 'selected_images.png')
sample(8)
0:5
selected_data$category
selected_data$in_set1 <- FALSE
#will randomize these
in_set1 <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
selected_data$category <- as.numeric(as.character(selected_data$category))
for (i in 0:5){
selected_data[selected_data$category == i & selected_data$group == 'control', 'in_set1'] <- in_set1(sample(8))
selected_data[selected_data$category == i & selected_data$group == 'drug', 'in_set1'] <- in_set1(sample(8))
}
selected_data$in_set1 <- FALSE
#will randomize these
in_set1 <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
selected_data$category <- as.numeric(as.character(selected_data$category))
for (i in 0:5){
selected_data[selected_data$category == i & selected_data$group == 'control', 'in_set1'] <- in_set1[sample(8)]
selected_data[selected_data$category == i & selected_data$group == 'drug', 'in_set1'] <- in_set1[sample(8)]
}
selected_data$in_set1
set.seed(123)
set.seed(123)
selected_data$in_set1 <- FALSE
#will randomize these
in_set1 <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
selected_data$category <- as.numeric(as.character(selected_data$category))
for (i in 0:5){
selected_data[selected_data$category == i & selected_data$group == 'control', 'in_set1'] <- in_set1[sample(8)]
selected_data[selected_data$category == i & selected_data$group == 'drug', 'in_set1'] <- in_set1[sample(8)]
}
selected_data
selected_data$in_set1
table(selected_data[, c('in_set1', 'group', 'category')])
names(selected_data0
)
names(selected_data)
library(tableone)
?CreateTableOne
tab <- CreateTableOne(vars = c('arousal', 'craving', 'typicality', 'valence', 'hue', 'saturation', 'value'),
strata = c('group', 'in_set1'), data = selected_data)
summary(tab)
tab
tab <- CreateTableOne(vars = c('arousal', 'craving', 'typicality', 'valence', 'hue', 'saturation', 'value'),
strata = c('in_set1'), data = selected_data[selected_data$group == 'control')
summary(tab)
tab <- CreateTableOne(vars = c('arousal', 'craving', 'typicality', 'valence', 'hue', 'saturation', 'value'),
strata = c('in_set1'), data = selected_data[selected_data$group == 'control'])
tab <- CreateTableOne(vars = c('arousal', 'craving', 'typicality', 'valence', 'hue', 'saturation', 'value'),
strata = c('in_set1'), data = selected_data[selected_data$group == 'control',])
tab
drug_tab <- CreateTableOne(vars = c('arousal', 'craving', 'typicality', 'valence', 'hue', 'saturation', 'value'),
strata = c('in_set1'), data = selected_data[selected_data$group == 'drug',])
drug_tab
paste(selected_data$group, selected_data$in_set1)
selected_data$group_var <- paste(selected_data$group, selected_data$in_set1)
?aes_string
make_plotset <- function(data_to_plot, main_title, filename, group){
p1 <- ggplot(d, aes_string(x = 'valence', fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(d, aes_string(x = 'arousal', fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(d, aes_string(x = 'craving', fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(d, aes_string(x = 'typicality', fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(d, aes_string(x = 'hue', fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(d, aes_string(x = 'saturation', fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(d, aes_string(x = 'value', fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = textGrob(main_title, gp=gpar(fontsize = 50)))
dev.off()
}
make_plotset(selected_data, 'Selected Images', 'selected_images.png', 'group_var')
selected_data$group_var <- paste(selected_data$group, selected_data$in_set1)
make_plotset(selected_data, 'Selected Images', 'selected_images.png', 'group_var')
selected_data$group_var
make_plotset <- function(data_to_plot, main_title, filename, group){
p1 <- ggplot(data_to_plot, aes_string(x = 'valence', fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p2 <- ggplot(data_to_plot, aes_string(x = 'arousal', fill = group)) + geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity')
p3 <- ggplot(data_to_plot, aes_string(x = 'craving', fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p4 <- ggplot(data_to_plot, aes_string(x = 'typicality', fill = group)) + geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity')
p5 <- ggplot(data_to_plot, aes_string(x = 'hue', fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p6 <- ggplot(data_to_plot, aes_string(x = 'saturation', fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
p7 <- ggplot(data_to_plot, aes_string(x = 'value', fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = textGrob(main_title, gp=gpar(fontsize = 50)))
dev.off()
}
make_plotset(selected_data, 'Selected Images', 'selected_images.png', 'group_var')
make_plotset <- function(data_to_plot, main_title, filename, group){
p1 <- ggplot(data_to_plot, aes_string(x = 'valence', fill = group)) +
geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity') + theme(legend.position="none")
p2 <- ggplot(data_to_plot, aes_string(x = 'arousal', fill = group)) +
geom_histogram(binwidth = 0.5, alpha = 0.5, position = 'identity') + theme(legend.position="none")
p3 <- ggplot(data_to_plot, aes_string(x = 'craving', fill = group)) +
geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity') + theme(legend.position="none")
p4 <- ggplot(data_to_plot, aes_string(x = 'typicality', fill = group)) +
geom_histogram(binwidth = 10, alpha = 0.5, position = 'identity') + theme(legend.position="none")
p5 <- ggplot(data_to_plot, aes_string(x = 'hue', fill = group)) +
geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity') + theme(legend.position="none")
p6 <- ggplot(data_to_plot, aes_string(x = 'saturation', fill = group)) +
geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity') + theme(legend.position="none")
p7 <- ggplot(data_to_plot, aes_string(x = 'value', fill = group)) + geom_histogram(binwidth = 0.1, alpha = 0.5, position = 'identity')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = textGrob(main_title, gp=gpar(fontsize = 50)))
dev.off()
}
make_plotset(merged_data, 'All Images', 'all_images.png', 'group')
selected_data$group_set1 <- paste(selected_data$group, selected_data$in_set1)
make_plotset(selected_data, 'Selected Images', 'selected_images.png', 'group_set1')
make_plotset(selected_data, 'Selected Images', 'selected_images.png', 'group')
make_plotset(selected_data, 'Selected Images Split', 'selected_images_split.png', 'group_set1')
control_tab
control_tab <- CreateTableOne(vars = c('arousal', 'craving', 'typicality', 'valence', 'hue', 'saturation', 'value'),
strata = c('in_set1'), data = selected_data[selected_data$group == 'control',])
control_tab
drug_tab <- CreateTableOne(vars = c('arousal', 'craving', 'typicality', 'valence', 'hue', 'saturation', 'value'),
strata = c('in_set1'), data = selected_data[selected_data$group == 'drug',])
drug_tab
dim(merged_data)
dim(longer_data)
names(longer_data)
head(longer_data)
long_data <- read.csv('meth_data3.csv', stringsAsFactors = FALSE)
longer_data <- melt(long_data, id.vars = c('subjectId', 'text', 'url'))
names(longer_data)
longer_data$file <- basename(longer_data$url)
long_data
long_data$text[long_data$text == '<p>After seeing this picture, please describe your mood, from negative to positive</p>'] <- 'valence'
long_data$text[long_data$text == '<p>After seeing this picture, please describe level of arousal, from calm to excited</p>'] <- 'arousal'
long_data$text[long_data$text == '<p>How much can this picture induce drug craving in an active methamphetamine user</p>'] <- 'craving'
long_data$text[long_data$text == '<p>How frequently does an active methamphetamine user see scenes like this image during his/her methamphetamine use?</p>'] <- 'typicality'
long_data$text[long_data$text == '<p>Is this picture related to methamphetamine and its use or not?</p>'] <- 'related'
long_data$value[long_data$value == 'NULL'] <- NA
long_data$value <- as.numeric(as.character(long_data$value))
long_data$value == 'NULL'
dim(long_data)
names(long_data)
ggplot() + geom_line(data = long_data[long_data$text == 'valence',], aes(x = orderNum, y = response, color = subjectID))
ggplot() + geom_line(data = long_data[long_data$text == 'valence',], aes(x = orderNum, y = response, color = subjectId))
long_data$response[long_data$response == 'NULL'] <- NA
long_data$respones <- as.numeric(as.character(long_data$response))
ggplot() + geom_line(data = long_data[long_data$text == 'valence',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_path(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_path(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response))
, color = subjectId
long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',]
long_data$orderNum
type(long_data$orderNum)
typeof(long_data$orderNum)
?merge
?cor
long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',]
long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016','orderNum']
ggplot() + geom_line(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_point(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_point(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId)) +
geom_line(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_point(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_point(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response))
ggplot() + geom_line(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response))
long_data$response_num <- as.numeric(long_data$respones)
ggplot() + geom_point(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = responses, color = subjectId))
long_data$response_num <- as.numeric(long_data$respone)
long_data$respones
long_data$response <- as.numeric(as.character(long_data$response))
ggplot() + geom_point(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'arousal' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'craving' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'typicality' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'typicality' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',], aes(x = orderNum, y = response, color = subjectId))
ggplot() + geom_line(data = long_data[long_data$text == 'valence',], aes(x = orderNum, y = response, color = subjectId))
ggplot(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = subjectId))
names(long_data)
groupings <- read.table('image_categories.txt', header = TRUE)
groupings
long_data$file <- basename(long_data$url)
names(groupings)
long_data <- merge(groupings, long_data)
names(long_data)
ggplot(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, shape = group))
ggplot(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
for (subject in unique(long_data$subjectId)){
data_to_plot <- long_data[long_data$subjectId == subject,]
p1 <- ggplot(data = long_data[long_data$text == 'valence' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p2 <- ggplot(data = long_data[long_data$text == 'arousal' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p3 <- ggplot(data = long_data[long_data$text == 'craving' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p4 <- ggplot(data = long_data[long_data$text == 'typicality' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p5 <- ggplot(data = long_data[long_data$text == 'hue' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p6 <- ggplot(data = long_data[long_data$text == 'saturation' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p7 <- ggplot(data = long_data[long_data$text == 'value' & long_data$subjectId == 'AL016',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
filename <- paste(subject, 'responses.png', sep = '_')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, ncol = 7, top = textGrob(subject, gp=gpar(fontsize = 50)))
dev.off()
}
for (subject in unique(long_data$subjectId)){
data_to_plot <- long_data[long_data$subjectId == subject,]
p1 <- ggplot(data = data_to_plot[data_to_plot$text == 'valence',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p2 <- ggplot(data = data_to_plot[data_to_plot$text == 'arousal',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p3 <- ggplot(data = data_to_plot[data_to_plot$text == 'craving',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
p4 <- ggplot(data = data_to_plot[data_to_plot$text == 'typicality',]) +
geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group))
filename <- paste(subject, 'responses.png', sep = '_')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, ncol = 4, top = textGrob(subject, gp=gpar(fontsize = 50)))
dev.off()
}
for (subject in unique(long_data$subjectId)){
data_to_plot <- long_data[long_data$subjectId == subject,]
p1 <- ggplot(data = data_to_plot[data_to_plot$text == 'valence',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('valence')
p2 <- ggplot(data = data_to_plot[data_to_plot$text == 'arousal',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('arousal')
p3 <- ggplot(data = data_to_plot[data_to_plot$text == 'craving',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('craving')
p4 <- ggplot(data = data_to_plot[data_to_plot$text == 'typicality',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('typicality')
filename <- paste(subject, 'responses.png', sep = '_')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, ncol = 4, top = textGrob(subject, gp=gpar(fontsize = 50)))
dev.off()
}
library(reshape2)
long_data <- read.csv('meth_data4.csv', stringsAsFactors = FALSE)
long_data$text[long_data$text == '<p>After seeing this picture, please describe your mood, from negative to positive</p>'] <- 'valence'
long_data$text[long_data$text == '<p>After seeing this picture, please describe level of arousal, from calm to excited</p>'] <- 'arousal'
long_data$text[long_data$text == '<p>How much can this picture induce drug craving in an active methamphetamine user</p>'] <- 'craving'
long_data$text[long_data$text == '<p>How frequently does an active methamphetamine user see scenes like this image during his/her methamphetamine use?</p>'] <- 'typicality'
long_data$text[long_data$text == '<p>Is this picture related to methamphetamine and its use or not?</p>'] <- 'related'
long_data$response[long_data$response == 'NULL'] <- NA
long_data$response <- as.numeric(as.character(long_data$response))
long_data$file <- basename(long_data$url)
#plot individual subject responses by question number
groupings <- read.table('image_categories.txt', header = TRUE)
long_data <- merge(groupings, long_data)
library(ggplot2)
for (subject in unique(long_data$subjectId)){
data_to_plot <- long_data[long_data$subjectId == subject,]
p1 <- ggplot(data = data_to_plot[data_to_plot$text == 'valence',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('valence')
p2 <- ggplot(data = data_to_plot[data_to_plot$text == 'arousal',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('arousal')
p3 <- ggplot(data = data_to_plot[data_to_plot$text == 'craving',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('craving')
p4 <- ggplot(data = data_to_plot[data_to_plot$text == 'typicality',]) +
#geom_line(aes(x = orderNum, y = response)) +
geom_point(aes(x = orderNum, y = response, color = group)) + ggtitle('typicality')
filename <- paste(subject, 'responses.png', sep = '_')
png(filename, width = 1400, height = 400)
grid.arrange(p1, p2, p3, p4, ncol = 4, top = textGrob(subject, gp=gpar(fontsize = 50)))
dev.off()
}
